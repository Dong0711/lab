<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>